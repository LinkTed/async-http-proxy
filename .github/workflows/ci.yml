name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    name: Job rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - uses: actions/checkout@v2
      - name: Run rustfmt
        run: cargo fmt --all -- --check

  audit:
    name: Job audit
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v1
      - name: Run audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  clippy:
    name: Job clippy
    needs: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - uses: actions/checkout@v2
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- --deny warnings -A clippy::unknown-clippy-lints

  tests:
    name: Job tests
    needs: [clippy]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust_channel: [stable, nightly]
        features: ["runtime-tokio", 
                   "runtime-async-std", 
                   "runtime-tokio,basic-auth", 
                   "runtime-async-std,basic-auth"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install toolchain ${{ matrix.rust_channel }} on ${{ matrix.os }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_channel }}
      - uses: actions/checkout@v2
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features "${{ matrix.features }}"
